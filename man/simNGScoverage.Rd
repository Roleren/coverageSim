% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sim_reads_from_counts.R
\name{simNGScoverage}
\alias{simNGScoverage}
\title{Simulate NGS coverage on from count tables on a genome.}
\usage{
simNGScoverage(
  simGenome,
  count_table = simCountTablesRegions(simCountTables(loadRegion(simGenome["txdb"],
    "cds"))),
  out_dir = file.path(dirname(simGenome["genome"]), ""),
  exp_name = "simulated_data",
  exp_save_dir = ORFik::config()["exp"],
  transcripts = names(count_table),
  ideal_coverage = list(leader = list(CAGE = quote(c(1, rep.int(0, x - 1)))), cds =
    list(RFP = quote(rep.int(c(1, 0, 0), length.out = x))), trailer = list(PAS =
    quote(c(rep.int(0, x - 1), 1))), uorf = list(RFP = quote(rep.int(c(1, 0, 0),
    length.out = x)))),
  rnase_bias = list(RFP = c(0.5, 2, 1, 10, 2, 1, 0.5), RNA = rnase_models(), CAGE =
    rnase_models(), PAS = rnase_models()),
  auto_correlation = list(cds = list(RFP = shapes(9)), uorf = list(RFP = shapes(9))),
  read_lengths_per = list(RFP = 27:29, RNA = 100, CAGE = 1, PAS = 1),
  sampling = list(leader = list(RFP = "MN", RNA = "MN"), cds = list(RFP = "DMN"), trailer
    = list(RFP = "MN"), uorf = list(RFP = "DMN")),
  libClasses = list(RFP = "GRanges", RNA = "GAlignment", CAGE = "GRanges", PAS =
    "GRanges"),
  libFormats = list(RFP = "ofst", RNA = "ofst", CAGE = "ofst", PAS = "ofst"),
  seq_bias = load_seq_bias(),
  true_uorf_ranges = "AUTO",
  uorf_prop_within_gene = "uniform",
  validate = TRUE,
  debug_coverage = FALSE
)
}
\arguments{
\item{simGenome}{named character vector, the genome to simulate data on.}

\item{count_table}{a summarized experiment of gene counts with rownames being transcript names.
Must contain at least 2 out of 5 named assays: gene, leaders, cds, trailer, uorf}

\item{out_dir}{directory to save simulated read files, name of individual files decided by naming columns}

\item{exp_name}{name of ORFik experiment to be created for these read files and annotation}

\item{exp_save_dir}{path, default ORFik::config()["exp"]. Set to tempdir()
or other location to not clutter your real experiments.}

\item{transcripts}{character vector, default \code{names(count_table)}, default uses all transcripts,
alternativly a subset of genes to assign reads to.}

\item{ideal_coverage}{list, default: list(leader =  list(CAGE = quote(c(1, rep.int(0, x -1)))),
cds =          list(RFP = quote(rep.int(c(1, 0, 0), length.out = x))),
trailer =      list(PAS = quote(c(rep.int(0, x -1), 1))),
uorf =         list(RFP = quote(rep.int(c(1, 0, 0), length.out = x))))}

\item{rnase_bias}{= list(leader =  list(RFP = 1, RNA = 1, CAGE = quote(1/seq.int(x)), PAS = quote(1/seq.int(x, 1))),
cds =     list(RFP = c(5, 2, 1), RNA = 1, CAGE = quote(1/seq.int(x)), PAS = quote(1/seq.int(x, 1))),
trailer = list(RFP = 1, RNA = 1, CAGE = quote(1/seq.int(x)), PAS = quote(1/seq.int(x, 1))),
uorf = list(RFP = c(5, 2, 1), RNA = 1, CAGE = quote(1/seq.int(x)), PAS = quote(1/seq.int(x, 1))))}

\item{auto_correlation}{= list(leader = list(RFP = 1, RNA = 1, CAGE = 1, PAS = 1),
cds = list(RFP = quote(abs(cos(seq(0, pi*(x/30), pi/30))) + 0.1), RNA = 1, CAGE = 1, PAS = 1),
trailer = list(RFP = 1, RNA = 1, CAGE = 1, PAS = 1),
uorf = list(RFP = quote(abs(cos(seq(0, pi*(x/30), pi/30))) + 0.1), RNA = 1, CAGE = 1, PAS = 1))
- Alternative: abs(cos(x)) + abs(cos(x*b[i])),
 where b is an internal value sampled per gene in interval 3 to 15.}

\item{read_lengths_per}{a list, default: list(RFP = 27:29, RNA = 100, CAGE = 1, PAS = 1)}

\item{sampling}{a list, default: list(leader = list(RFP = "MN", RNA = "MN"),
cds =    list(RFP = "DMN"),
trailer =list(RFP = "MN"),
uorf =   list(RFP = "DMN"))}

\item{libClasses}{= list(RFP = "GRanges", RNA = "GAlignment", CAGE = "GRanges", PAS = "GRanges")}

\item{libFormats}{The output formats, a named list of characters:
list(RFP = "ofst", RNA = "ofst", CAGE = "ofst", PAS = "ofst"). Alternatives:
Non at the moment.}

\item{seq_bias}{the sequence bias used for simulation, default:
load_seq_bias(), the Ribosome profiling estimates from Amino acid dwell times from
P-site shifted reads from library "R2" from the coverageSim paper. Specifically it is:
a data.table with correctly named columns:
 "seq", "alpha"\cr
 the column seq (Amino acid, 1 letter per)
 or by codons (3 letter per), and a mean column and dispersion, with relative usage.
 In addition iMethionin
 (start codon) can be differentiated by setting seq = "#" and stop codon
 as seq = "*". Gives ability to scale these two important regions seperatly
 from other codons.}

\item{true_uorf_ranges}{= "AUTO". Load from uorf string in 'simGenome'.}

\item{uorf_prop_within_gene}{= "uniform". How should counts for uORF be
distributed. Alternatives: 'length' (length biased), or user specified
list of numeric values for all ORFs.}

\item{validate}{logical, TRUE, check that experiment was correctly made.
Set to false if you know it won't and you will fix it later. This happens
if you want to put a new sample with different parameters,
in a folder with other libraries you made
earlier, so then only validate when you create the ORFik experiment after the
last sample is made.}

\item{debug_coverage}{logical, default FALSE. If TRUE, debug steps of coverage calculation,
for parameter errors or just to understand how it all works.}
}
\value{
an \code{\link[ORFik]{experiment}}
}
\description{
Simulated read coordinates from count tables given a genome.
For each read type bias the way reads are distributed by their properties.
Like sampling type, variance, skew, region bias, sequence bias etc.
}
\examples{
## Simple example
# 6 genes on 6 chromosomes (No active uORFs)
simGenome6 <- simGenome(n = 6, max_uorfs = 0)
# Simulate Ribo-seq only
gene_count_table <-simCountTables(loadRegion(simGenome6["txdb"], "cds"),
 libtypes = "RFP", print_statistics = FALSE)
region_count_table <- simCountTablesRegions(gene_count_table,
                 regionsToSample = c("leader", "cds", "trailer"))
simNGScoverage(simGenome6, region_count_table)
}
